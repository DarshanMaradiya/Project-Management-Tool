# # ---------- H2 settings ----------
# spring.h2.console.enabled=true
# spring.h2.console.path=/h2

# spring.datasource.url=jdbc:h2:mem:memDb;DB_CLOSE_DELAY=-1
# spring.datasource.driver-class-name=org.h2.Driver
# spring.datasource.username=sa
# spring.datasource.password=

# spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# spring.jpa.hibernate.ddl-auto=update
# spring.jpa.show-sql=true
# spring.jpa.properties.hibernate.format_sql=true

# ---------- MySQL settings ----------
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# spring.datasource.url=jdbc:mysql://localhost:3306/ppmtool
# spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
# spring.datasource.username=root
# spring.datasource.password=password
# spring.jpa.show-sql=true
# spring.jpa.hibernate.ddl-auto=update
# # spring.profiles.active=prod
# ## Hibernate Properties
# # The SQL dialect makes Hibernate generate better SQL for the chosen database
# spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

# # ---------- Mail Settings ---------
# setting 1
# spring.mail.host = smtp.gmail.com
# spring.mail.username = **********@gmail.com
# spring.mail.password = ********
# setting 2
# spring.mail.host=smtp.gmail.com
# spring.mail.port=587
# spring.mail.username=gmail id
# spring.mail.password=gmail password
# spring.mail.properties.mail.smtp.auth=true
# spring.mail.properties.mail.smtp.starttls.enable=true
# mail.smtp.debug=true

# # ---------- H2 settings ----------
spring:
    mail:
        host: smtp.gmail.com
        port: 587
        username: YourEmail@gmail.com
        password: YourPassword
        properties:
            mail:
                smtp:
                    auth: true
                    starttls:
                        enable: true
        smtp:
            debug: true

    datasource:
        driver-class-name: org.h2.Driver
        password: ""
        url: jdbc:h2:mem:memDb;DB_CLOSE_DELAY=-1
        username: sa
    h2:
        console:
            enabled: true
            path: /h2
    jpa:
        database-platform: org.hibernate.dialect.H2Dialect
        hibernate:
            ddl-auto: update
        properties:
            hibernate:
                format_sql: true
        show-sql: true
    security:
        oauth2:
            client:
                registration:
                    google:
                        clientId: {Your client Id}
                        clientSecret: {Your client secret}
                        redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
                        scope:
                            - email
                            - profile
                    facebook:
                        clientId: {Your client Id}
                        clientSecret: {Your client secret}
                        redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
                        scope:
                            - email
                            - public_profile
                    github:
                        clientId: {Your client Id}
                        clientSecret: {Your client secret}
                        redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
                        scope:
                            - user:email
                            - read:user
                    linkedin:
                        clientId: {Your client Id}
                        clientSecret: {Your client secret}
                        redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
                        scope:
                            - r_liteprofile
                            - r_emailaddress
                        client-name: Linkedin
                        authorization-grant-type: authorization_code
                provider:
                    linkedin:
                        provider: linkedin
                        authorization-uri: https://www.linkedin.com/oauth/v2/authorization
                        token-uri: https://www.linkedin.com/oauth/v2/accessToken
                        user-info-uri: https://api.linkedin.com/v2/me
                        user-name-attribute: id
                    facebook:
                        authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
                        tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
                        userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)

app:
    auth:
        tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
        tokenExpirationMsec: 864000000
    oauth2:
        # After successfully authenticating with the OAuth2 Provider,
        # we'll be generating an auth token for the user and sending the token to the
        # redirectUri mentioned by the client in the /oauth2/authorize request.
        # We're not using cookies because they won't work well in mobile clients.
        authorizedRedirectUris:
            - http://localhost:3000/oauth2/redirect
            - myandroidapp://oauth2/redirect
            - myiosapp://oauth2/redirect
# ---------- MySQL settings ----------
# spring:
#     datasource:
#         driver-class-name: com.mysql.cj.jdbc.Driver
#         password: password
#         url: jdbc:mysql://localhost:3306/ppmtool
#         username: root
#     jpa:
#         database-platform: org.hibernate.dialect.MySQL8Dialect
#         hibernate:
#             ddl-auto: update
#         properties:
#             hibernate:
#                 dialect: org.hibernate.dialect.MySQL5InnoDBDialect
#         show-sql: true
#     # profiles:
#     #     active: prod
